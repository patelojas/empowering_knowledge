{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateD3Dataset = exports.noDisplayColor = void 0;\nvar noDisplayColor = \"#aaaaaa22\";\nexports.noDisplayColor = noDisplayColor;\n\nvar generateD3Dataset = function generateD3Dataset(nbDayDiff, svg, daysName, rectWidth, marginBottom, textColor, data, bufferDate, backgroundColor, startDateYesterday, defaultColor, colors, rangeDisplayData) {\n  var dataset = [];\n  var startDateDisplayData = rangeDisplayData && rangeDisplayData[0] ? new Date(rangeDisplayData[0]) : null;\n  if (startDateDisplayData) startDateDisplayData.setHours(0, 0, 0, 0);\n  var endDateDisplayData = rangeDisplayData && rangeDisplayData[1] ? new Date(rangeDisplayData[1]) : null;\n  if (endDateDisplayData) endDateDisplayData.setHours(0, 0, 0, 0);\n\n  if (endDateDisplayData && startDateDisplayData && startDateDisplayData.getTime() > endDateDisplayData.getTime()) {\n    var tmpDate = new Date(startDateDisplayData);\n    startDateDisplayData = new Date(endDateDisplayData);\n    endDateDisplayData = new Date(tmpDate);\n  }\n\n  var _loop = function _loop(i) {\n    if (i == 0 || i === 2 || i === 4 || i === 6) {\n      // Display day name as y axis\n      svg.append(\"text\").text(daysName[i / 2]).attr(\"y\", i % 7 * (rectWidth + marginBottom) + rectWidth / 6 + 32).attr(\"x\", 0).attr(\"font-size\", rectWidth + 3).attr(\"fill\", textColor);\n    } // Find the first data that match with current bufferDate\n\n\n    var objMatch = data.find(function (obj) {\n      var dateTmp = new Date(obj.date);\n      dateTmp.setHours(0, 0, 0, 0);\n      bufferDate.setHours(0, 0, 0, 0);\n      return dateTmp.getTime() === bufferDate.getTime();\n    }); // If bufferDate < (startDate - 1 day) we set the square color like background to make that 'invisible'\n\n    var finalColor = backgroundColor;\n    var maxCount = null;\n\n    if (startDateDisplayData && startDateDisplayData.getTime() > bufferDate.getTime() || endDateDisplayData && endDateDisplayData.getTime() < bufferDate.getTime()) {\n      finalColor = noDisplayColor;\n    } // If there is no match we set the default color\n    else if (objMatch === undefined && bufferDate.getTime() >= startDateYesterday.getTime()) {\n        finalColor = defaultColor;\n      } else if (bufferDate.getTime() >= startDateYesterday.getTime()) {\n        finalColor = colors.filter(function (c) {\n          return c.count <= objMatch.count;\n        });\n\n        if (finalColor.length === 0) {\n          finalColor = defaultColor;\n        } else {\n          finalColor = finalColor[finalColor.length - 1].color;\n        }\n      }\n\n    var today = new Date(bufferDate.getTime()); // Finally, we push it to an Array that will be used by d3\n\n    dataset.push({\n      date: today,\n      count: objMatch ? objMatch.count : maxCount || 0,\n      color: finalColor,\n      i: i\n    });\n    bufferDate.setDate(bufferDate.getDate() + 1);\n  };\n\n  for (var i = 0; i < nbDayDiff; i++) {\n    _loop(i);\n  }\n\n  return dataset;\n};\n\nexports.generateD3Dataset = generateD3Dataset;","map":null,"metadata":{},"sourceType":"script"}