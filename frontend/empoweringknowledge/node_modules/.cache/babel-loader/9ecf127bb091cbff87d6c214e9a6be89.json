{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Docker\\\\swe\\\\EmPoweringKnowledge\\\\cs373-web\\\\frontend\\\\empoweringknowledge\\\\src\\\\Map.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      democrat: 0,\n      republican: 0,\n      other: 0\n    };\n  }\n\n  componentDidMount() {\n    var value = window.location.href.split(\"/\");\n    var path = value[4];\n    var page = 1;\n\n    for (var i = 1; i < 173; i++) {\n      fetch('https://api.empoweringknowledge.me/api/congressmembers?page=' + page).then(res => res.json()).then(data => {\n        for (var d of data.objects) {\n          if (d.party == \"D\") {\n            this.setState({\n              democrat: this.state.democrat += Object.keys(d.bills_sponsored).length\n            });\n          } else if (d.party == \"R\") {\n            this.setState({\n              republican: this.state.republican += Object.keys(d.bills_sponsored).length\n            });\n          } else {\n            this.setState({\n              other: this.state.other += Object.keys(d.bills_sponsored).length\n            });\n          }\n        }\n      }, this.finish());\n    }\n  }\n\n  finish() {\n    console.log(\"done\");\n    return;\n  }\n\n  render() {\n    // Create dummy data\n    var data = {\n      Republican: this.state.republican,\n      Democrat: this.state.democrat,\n      Other: this.state.other\n    };\n    console.log(data); // set the dimensions and margins of the graph\n\n    var width = 450;\n    var height = 450;\n    var margin = 40; // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n\n    var radius = Math.min(width, height) / 2 - margin; // append the svg object to the div called 'my_dataviz'\n\n    var svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\"); // set the color scale\n\n    var color = d3.scaleOrdinal().domain(data).range([\"#ff0000\", \"#0000ff\", \"#808080\"]); // shape helper to build arcs:\n\n    var arcGenerator = d3.arc().innerRadius(0).outerRadius(radius); // Compute the position of each group on the pie:\n\n    var pie = d3.pie().value(function (d) {\n      return d.value;\n    });\n    var data_ready = pie(d3.entries(data)); // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n\n    svg.selectAll('whatever').data(data_ready).enter().append('path').attr('d', d3.arc().innerRadius(0).outerRadius(radius)).attr('fill', function (d) {\n      return color(d.data.key);\n    }).attr(\"stroke\", \"black\").style(\"stroke-width\", \"2px\").style(\"opacity\", 0.7);\n    svg.selectAll('whatever').data(data_ready).enter().append('text').text(function (d) {\n      return d.data.key;\n    }).attr(\"transform\", function (d) {\n      return \"translate(\" + arcGenerator.centroid(d) + \")\";\n    }).style(\"text-anchor\", \"middle\").style(\"font-size\", 17);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Total Number of Energy Bills by Party\"), React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"35%\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      id: \"my_dataviz\",\n      width: \"100%\",\n      height: 650,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\Docker\\swe\\EmPoweringKnowledge\\cs373-web\\frontend\\empoweringknowledge\\src\\Map.js"],"names":["React","Component","d3","Map","constructor","props","state","democrat","republican","other","componentDidMount","value","window","location","href","split","path","page","i","fetch","then","res","json","data","d","objects","party","setState","Object","keys","bills_sponsored","length","finish","console","log","render","Republican","Democrat","Other","width","height","margin","radius","Math","min","svg","select","append","attr","color","scaleOrdinal","domain","range","arcGenerator","arc","innerRadius","outerRadius","pie","data_ready","entries","selectAll","enter","key","style","text","centroid","paddingLeft","justifyContent"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass Map extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        democrat: 0,\r\n        republican: 0,\r\n        other: 0\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        var value = window.location.href.split(\"/\")\r\n        var path = (value[4])\r\n        var page = 1;\r\n        for(var i = 1; i < 173; i++){\r\n            fetch('https://api.empoweringknowledge.me/api/congressmembers?page=' + page)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                for(var d of data.objects){\r\n                    if(d.party == \"D\"){\r\n                        this.setState({ democrat: this.state.democrat += Object.keys(d.bills_sponsored).length}); \r\n                       \r\n                    }\r\n                    else if(d.party == \"R\"){\r\n                        this.setState({ republican: this.state.republican += Object.keys(d.bills_sponsored).length}); \r\n                    }\r\n                    else {\r\n                        this.setState({ other: this.state.other += Object.keys(d.bills_sponsored).length}); \r\n                    }\r\n                   \r\n                }\r\n            }, this.finish())\r\n            \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    finish(){    \r\n        console.log(\"done\")\r\n        return\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n        \r\n        // Create dummy data\r\n        var data = {Republican: this.state.republican, Democrat: this.state.democrat, Other: this.state.other}\r\n\r\n        console.log(data)\r\n        // set the dimensions and margins of the graph\r\n        var width = 450\r\n        var height = 450\r\n        var margin = 40\r\n\r\n        // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\r\n        var radius = Math.min(width, height) / 2 - margin\r\n\r\n        // append the svg object to the div called 'my_dataviz'\r\n        var svg = d3.select(\"#my_dataviz\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n\r\n        // set the color scale\r\n        var color = d3.scaleOrdinal()\r\n        .domain(data)\r\n        .range([\"#ff0000\", \"#0000ff\", \"#808080\"])\r\n\r\n         // shape helper to build arcs:\r\n        var arcGenerator = d3.arc()\r\n        .innerRadius(0)\r\n        .outerRadius(radius)\r\n\r\n\r\n\r\n        // Compute the position of each group on the pie:\r\n        var pie = d3.pie()\r\n        .value(function(d) {return d.value; })\r\n        var data_ready = pie(d3.entries(data))\r\n\r\n        // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\r\n        svg\r\n        .selectAll('whatever')\r\n        .data(data_ready)\r\n        .enter()\r\n        .append('path')\r\n        .attr('d', d3.arc()\r\n        .innerRadius(0)\r\n        .outerRadius(radius)\r\n        )\r\n        .attr('fill', function(d){ return(color(d.data.key)) })\r\n        .attr(\"stroke\", \"black\")\r\n        .style(\"stroke-width\", \"2px\")\r\n        .style(\"opacity\", 0.7)\r\n\r\n            svg\r\n        .selectAll('whatever')\r\n        .data(data_ready)\r\n        .enter()\r\n        .append('text')\r\n        .text(function (d) { return d.data.key })\r\n        .attr(\"transform\", function (d) { return \"translate(\" + arcGenerator.centroid(d) + \")\"; })\r\n        .style(\"text-anchor\", \"middle\")\r\n        .style(\"font-size\", 17)\r\n    \r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h2>Total Number of Energy Bills by Party</h2>\r\n                <div style={{ paddingLeft: \"35%\",justifyContent: \"center\" }}>\r\n                    <svg id='my_dataviz' width=\"100%\" height={650}></svg>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}