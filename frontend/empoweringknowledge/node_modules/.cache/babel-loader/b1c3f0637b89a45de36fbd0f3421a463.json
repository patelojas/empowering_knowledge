{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Docker\\\\swe\\\\EmPoweringKnowledge\\\\cs373-web\\\\frontend\\\\empoweringknowledge\\\\src\\\\RepresentativeInstance.js\";\nimport React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Timeline } from 'react-twitter-widgets';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nexport class RepresentativeInstance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    var value = window.location.href.split(\"/\");\n    this.setState({\n      isLoading: true\n    });\n    fetch('http://3.84.54.129:5000/api/congressmembers/' + this.props.name).then(res => res.json()).then(data => {\n      this.setState({\n        items: data.objects,\n        isLoading: false\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const _this$state = this.state,\n          items = _this$state.items,\n          isLoading = _this$state.isLoading;\n    console.log(isLoading);\n\n    if (isLoading) {\n      console.log(isLoading);\n      return false;\n    }\n\n    console.log(items);\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.name) // <div center className=\"RepresentativeInstance\"style = {{paddingLeft:'3%',textAlign: 'center',color: '#000000'}}>\n    //     {/* <img style={{paddingTop:'4%',width: '260px', height: '375px'}} src={require('./'+image+'.jpg')}/> */}\n    //     <h2 style = {{paddingTop: \"3%\",color: '#000000'}}> {this.props.name} </h2>\n    //     <center>\n    //     <ListGroup style = {{paddingTop:'1%', paddingLeft:'3%',textAlign: 'center',color: '#000000', width: '50%'}}>\n    //     <ListGroupItem>\n    //         <ListGroupItemHeading>Summary</ListGroupItemHeading>\n    //             <ListGroupItemText>\n    //             {this.state.bio}\n    //             </ListGroupItemText>\n    //         </ListGroupItem>\n    //         <ListGroupItem>\n    //         <ListGroupItemHeading>State</ListGroupItemHeading>\n    //             <ListGroupItemText>\n    //             <a href = {state}>{this.props.state}</a>\n    //             </ListGroupItemText>\n    //             </ListGroupItem>\n    //         <ListGroupItem>\n    //         <ListGroupItemHeading>Party</ListGroupItemHeading>\n    //         <ListGroupItemText>\n    //         {this.props.party}\n    //         </ListGroupItemText>\n    //         </ListGroupItem>\n    //         <ListGroupItem>\n    //         <ListGroupItemHeading>Years Active</ListGroupItemHeading>\n    //             <ListGroupItemText>\n    //             {this.props.date}\n    //             </ListGroupItemText>\n    //         </ListGroupItem>\n    //         <ListGroupItem>\n    //         <ListGroupItemHeading>Chamber</ListGroupItemHeading>\n    //             <ListGroupItemText>\n    //             {this.props.chamber}\n    //             </ListGroupItemText>\n    //         </ListGroupItem>\n    //         <ListGroupItem>\n    //         <ListGroupItemHeading>Bills</ListGroupItemHeading>\n    //             <ListGroupItemText>\n    //                 <a href={bill}>{billname}</a>\n    //             </ListGroupItemText>\n    //         </ListGroupItem>\n    // </ListGroup>\n    // </center>\n    //     <div>\n    //         <Timeline\n    //         dataSource={{\n    //         sourceType: 'profile',\n    //         screenName: twitter\n    //         }}\n    //         options={{\n    //         height: '400'\n    //     }}/>\n    // </div>\n    // </div>\n    ;\n  }\n\n}\nexport default RepresentativeInstance;","map":{"version":3,"sources":["C:\\Users\\Docker\\swe\\EmPoweringKnowledge\\cs373-web\\frontend\\empoweringknowledge\\src\\RepresentativeInstance.js"],"names":["React","Component","Timeline","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","DropdownToggle","DropdownMenu","DropdownItem","RepresentativeInstance","constructor","props","state","items","isLoading","componentDidMount","value","window","location","href","split","setState","fetch","name","then","res","json","data","objects","catch","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,sCAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,GALJ,EAMIC,OANJ,EAOIC,OAPJ,EAQIC,oBARJ,EAQ0BC,SAR1B,EAQqCC,aARrC,EAQoDC,oBARpD,EAQ0EC,iBAR1E,EASIC,cATJ,EAUIC,YAVJ,EAWIC,YAXJ,QAWwB,YAXxB;AAaA,OAAO,MAAMC,sBAAN,SAAqCjB,SAArC,CAA+C;AACpDkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAMH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,CAAZ;AACA,SAAKC,QAAL,CAAc;AAACP,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACAQ,IAAAA,KAAK,CAAC,iDAAiD,KAAKX,KAAL,CAAWY,IAA7D,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACZ,WAAKN,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEc,IAAI,CAACC,OAAd;AAAsBd,QAAAA,SAAS,EAAE;AAAjC,OAAd;AACH,KAJD,EAKCe,KALD,CAKOC,OAAO,CAACC,GALf;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAEsB,KAAKpB,KAF3B;AAAA,UAEEC,KAFF,eAEEA,KAFF;AAAA,UAESC,SAFT,eAESA,SAFT;AAGLgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;;AACA,QAAIA,SAAJ,EAAc;AACVgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACA,aAAO,KAAP;AACH;;AAEDgB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AAEE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWY,IAAhB,CADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDF;AA4DD;;AA5FiD;AA+FtD,eAAed,sBAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Timeline } from 'react-twitter-widgets'\r\n\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem } from 'reactstrap';\r\n\r\nexport class RepresentativeInstance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        items: [],\r\n        isLoading: false,\r\n    }\r\n    \r\n    \r\n}\r\ncomponentDidMount() {\r\n    var value = window.location.href.split(\"/\")\r\n    this.setState({isLoading: true});\r\n    fetch('http://3.84.54.129:5000/api/congressmembers/' + this.props.name)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n        this.setState({ items: data.objects,isLoading: false});      \r\n    })\r\n    .catch(console.log)\r\n}\r\n\r\nrender() {\r\n\r\n    const {items, isLoading} = this.state;\r\n    console.log(isLoading)\r\n    if (isLoading){\r\n        console.log(isLoading)\r\n        return false;\r\n    }\r\n    \r\n    console.log(items)        \r\n    \r\n      return (\r\n        <h1>{this.props.name}</h1>\r\n        // <div center className=\"RepresentativeInstance\"style = {{paddingLeft:'3%',textAlign: 'center',color: '#000000'}}>\r\n        //     {/* <img style={{paddingTop:'4%',width: '260px', height: '375px'}} src={require('./'+image+'.jpg')}/> */}\r\n        //     <h2 style = {{paddingTop: \"3%\",color: '#000000'}}> {this.props.name} </h2>\r\n        //     <center>\r\n        //     <ListGroup style = {{paddingTop:'1%', paddingLeft:'3%',textAlign: 'center',color: '#000000', width: '50%'}}>\r\n        //     <ListGroupItem>\r\n        //         <ListGroupItemHeading>Summary</ListGroupItemHeading>\r\n        //             <ListGroupItemText>\r\n        //             {this.state.bio}\r\n        //             </ListGroupItemText>\r\n        //         </ListGroupItem>\r\n        //         <ListGroupItem>\r\n        //         <ListGroupItemHeading>State</ListGroupItemHeading>\r\n                    \r\n        //             <ListGroupItemText>\r\n        //             <a href = {state}>{this.props.state}</a>\r\n        //             </ListGroupItemText>\r\n        //             </ListGroupItem>\r\n        //         <ListGroupItem>\r\n        //         <ListGroupItemHeading>Party</ListGroupItemHeading>\r\n        //         <ListGroupItemText>\r\n        //         {this.props.party}\r\n        //         </ListGroupItemText>\r\n        //         </ListGroupItem>\r\n        //         <ListGroupItem>\r\n        //         <ListGroupItemHeading>Years Active</ListGroupItemHeading>\r\n        //             <ListGroupItemText>\r\n        //             {this.props.date}\r\n        //             </ListGroupItemText>\r\n        //         </ListGroupItem>\r\n        //         <ListGroupItem>\r\n        //         <ListGroupItemHeading>Chamber</ListGroupItemHeading>\r\n        //             <ListGroupItemText>\r\n        //             {this.props.chamber}\r\n        //             </ListGroupItemText>\r\n        //         </ListGroupItem>\r\n        //         <ListGroupItem>\r\n        //         <ListGroupItemHeading>Bills</ListGroupItemHeading>\r\n        //             <ListGroupItemText>\r\n        //                 <a href={bill}>{billname}</a>\r\n        //             </ListGroupItemText>\r\n        //         </ListGroupItem>\r\n        // </ListGroup>\r\n        // </center>\r\n        //     <div>\r\n        //         <Timeline\r\n        //         dataSource={{\r\n        //         sourceType: 'profile',\r\n        //         screenName: twitter\r\n        //         }}\r\n        //         options={{\r\n        //         height: '400'\r\n        //     }}/>\r\n        // </div>\r\n        // </div>\r\n        \r\n\r\n      );\r\n    }\r\n}\r\n\r\nexport default RepresentativeInstance;"]},"metadata":{},"sourceType":"module"}