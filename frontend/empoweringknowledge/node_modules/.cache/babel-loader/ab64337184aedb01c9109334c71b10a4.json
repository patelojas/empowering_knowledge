{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Docker\\\\swe\\\\EmPoweringKnowledge\\\\cs373-web\\\\frontend\\\\empoweringknowledge\\\\src\\\\Pagination.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nexport class MyPagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      nextpage: 2,\n      lastpage: 1,\n      isLoading: false\n    };\n  }\n  /*\r\n  * Updates page variables that are used in pagination when the user clicks \r\n  * on a new page number to go to. Then calls componentDidMount() so that the \r\n  * new data is loaded. \r\n  */\n  // handlePageClick(newPage){\n  //     if(newPage === 1){\n  //         this.setState({lastpage: newPage, page: newPage, nextpage: 2}, () => {\n  //             this.props.changePage(this.state.page);\n  //         });\n  //     }\n  //     else if(newPage === this.props.pages){\n  //         this.setState({lastpage: newPage - 1, page: newPage, nextpage: newPage}, () => {\n  //             this.props.changePage(this.state.page);\n  //         });\n  //     }\n  //     else{\n  //         this.setState({lastpage: newPage - 1, page: newPage, nextpage: newPage + 1}, () => {\n  //             this.props.changePage(this.state.page);\n  //         });\n  //     }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      size: \"lg\",\n      style: {\n        justifyContent: 'center',\n        paddingTop: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      first: true,\n      onClick: () => this.props.changePage(1),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      previous: true,\n      onClick: () => this.props.changePage(this.props.lastpage),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: () => this.props.handlePageClick(this.props.page),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.page)), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: () => this.props.handlePageClick(this.props.nextpage),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.nextpage)), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      next: true,\n      onClick: () => this.props.handlePageClick(this.props.nextpage),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      last: true,\n      onClick: () => this.props.handlePageClick(this.props.pages),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default MyPagination;","map":{"version":3,"sources":["C:\\Users\\Docker\\swe\\EmPoweringKnowledge\\cs373-web\\frontend\\empoweringknowledge\\src\\Pagination.js"],"names":["React","Component","PropTypes","Pagination","PaginationItem","PaginationLink","MyPagination","constructor","props","state","page","nextpage","lastpage","isLoading","render","justifyContent","paddingTop","changePage","handlePageClick","pages"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Pagination, PaginationItem, PaginationLink\r\n    } from 'reactstrap';\r\n\r\n    export class MyPagination extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                page: 1,\r\n                nextpage: 2,\r\n                lastpage: 1,\r\n                isLoading: false,\r\n            }\r\n            \r\n        }\r\n        /*\r\n        * Updates page variables that are used in pagination when the user clicks \r\n        * on a new page number to go to. Then calls componentDidMount() so that the \r\n        * new data is loaded. \r\n        */\r\n        // handlePageClick(newPage){\r\n        //     if(newPage === 1){\r\n        //         this.setState({lastpage: newPage, page: newPage, nextpage: 2}, () => {\r\n        //             this.props.changePage(this.state.page);\r\n        //         });\r\n        //     }\r\n        //     else if(newPage === this.props.pages){\r\n        //         this.setState({lastpage: newPage - 1, page: newPage, nextpage: newPage}, () => {\r\n        //             this.props.changePage(this.state.page);\r\n        //         });\r\n        //     }\r\n        //     else{\r\n        //         this.setState({lastpage: newPage - 1, page: newPage, nextpage: newPage + 1}, () => {\r\n        //             this.props.changePage(this.state.page);\r\n        //         });\r\n        //     }\r\n        // }\r\n        render(){\r\n            return(\r\n                <div>\r\n                    <Pagination size=\"lg\" style={{justifyContent: 'center', paddingTop:'3%'}} >\r\n                        <PaginationItem>\r\n                            <PaginationLink first onClick={() =>this.props.changePage(1)} href={\"#\"} />\r\n                            </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink previous onClick={() => this.props.changePage(this.props.lastpage)} href={\"#\"} />\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink onClick={() => this.props.handlePageClick(this.props.page)} href={\"#\"}>\r\n                                {this.props.page}\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink onClick={() => this.props.handlePageClick(this.props.nextpage)} href={\"#\"}>\r\n                                {this.props.nextpage}\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink next onClick={() => this.props.handlePageClick(this.props.nextpage)} href={\"#\"} />\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink last onClick={() => this.props.handlePageClick(this.props.pages)} href=\"#\" />\r\n                        </PaginationItem>\r\n                    </Pagination>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }  \r\n  \r\n  export default MyPagination;\r\n  "]},"metadata":{},"sourceType":"module"}