{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Docker\\\\swe\\\\EmPoweringKnowledge\\\\cs373-web\\\\frontend\\\\empoweringknowledge\\\\src\\\\Map.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport stateInfo from './stateInfo';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      energy1: null,\n      energy2: null,\n      energy3: null,\n      population: null,\n      totalPages: 1,\n      items: [],\n      page: 1,\n      bill: 0\n    };\n    this.drawChart = this.drawChart.bind(this);\n    this.getPopulationPerState = this.getPopulationPerState.bind(this);\n  }\n\n  componentDidMount() {\n    var value = window.location.href.split(\"/\");\n    var path = value[4];\n  }\n\n  finish() {\n    return;\n  }\n\n  getPopulationPerState(state) {\n    var stateData = null;\n    var i;\n    console.log('https://api.empoweringknowledge.me/api/states/' + state);\n    fetch('https://api.empoweringknowledge.me/api/states/' + state).then(res => res.json()).then(data => {\n      // return this.getMembers(data)\n      this.setState({\n        population: data.population\n      });\n      console.log(data.population);\n      return data.population;\n    }); // var person;\n    // var count = 0;\n    // console.log(\"data \" + stateData)\n    // if(stateData != null){\n    //     console.log(stateData.congress_members)\n    // }\n    // return count;\n  }\n\n  tooltipHtml(n, d) {\n    /* function to create html content string in tooltip div. */\n    return \"<h4>\" + n + \"</h4><table>\" + \"<tr><td>Energy Bills</td><td>\" + d.low + \"</td></tr>\" + \"</table>\";\n  }\n\n  drawChart() {\n    var states = {\n      \"AL\": \"Alabama\",\n      \"AK\": \"Alaska\",\n      \"AZ\": \"Arizona\",\n      \"AR\": \"Arkansas\",\n      \"CA\": \"California\",\n      \"CO\": \"Colorado\",\n      \"CT\": \"Connecticut\",\n      \"DE\": \"Delaware\",\n      \"FL\": \"Florida\",\n      \"GA\": \"Georgia\",\n      \"HI\": \"Hawaii\",\n      \"ID\": \"Idaho\",\n      \"IL\": \"Illinois\",\n      \"IN\": \"Indiana\",\n      \"IA\": \"Iowa\",\n      \"KS\": \"Kansas\",\n      \"KY\": \"Kentucky\",\n      \"LA\": \"Louisiana\",\n      \"ME\": \"Maine\",\n      \"MD\": \"Maryland\",\n      \"MA\": \"Massachusetts\",\n      \"MI\": \"Michigan\",\n      \"MN\": \"Minnesota\",\n      \"MS\": \"Mississippi\",\n      \"MO\": \"Missouri\",\n      \"MT\": \"Montana\",\n      \"NE\": \"Nebraska\",\n      \"NV\": \"Nevada\",\n      \"NH\": \"New Hampshire\",\n      \"NJ\": \"New Jersey\",\n      \"NM\": \"New Mexico\",\n      \"NY\": \"New York\",\n      \"NC\": \"North Carolina\",\n      \"ND\": \"North Dakota\",\n      \"OH\": \"Ohio\",\n      \"OK\": \"Oklahoma\",\n      \"OR\": \"Oregon\",\n      \"PA\": \"Pennsylvania\",\n      \"RI\": \"Rhode Island\",\n      \"SC\": \"South Carolina\",\n      \"SD\": \"South Dakota\",\n      \"TN\": \"Tennessee\",\n      \"TX\": \"Texas\",\n      \"UT\": \"Utah\",\n      \"VT\": \"Vermont\",\n      \"VA\": \"Virginia\",\n      \"WA\": \"Washington\",\n      \"WV\": \"West Virginia\",\n      \"WI\": \"Wisconsin\",\n      \"WY\": \"Wyoming\"\n    };\n    var num;\n    var d = \"\";\n    var sampleData = {};\n    var val = [\"HI\", \"AK\", \"FL\", \"SC\", \"GA\", \"AL\", \"NC\", \"TN\", \"RI\", \"CT\", \"MA\", \"ME\", \"NH\", \"VT\", \"NY\", \"NJ\", \"PA\", \"DE\", \"MD\", \"WV\", \"KY\", \"OH\", \"MI\", \"WY\", \"MT\", \"ID\", \"WA\", \"TX\", \"CA\", \"AZ\", \"NV\", \"UT\", \"CO\", \"NM\", \"OR\", \"ND\", \"SD\", \"NE\", \"IA\", \"MS\", \"IN\", \"IL\", \"MN\", \"WI\", \"MO\", \"AR\", \"OK\", \"KS\", \"LA\", \"VA\"];\n\n    for (d in val) {\n      var num = 0;\n      num = this.getPopulationPerState(states[val[d]]);\n      console.log(num);\n      sampleData[d] = {\n        // parks: p, orgs: o, events: e,\n        color: d3.interpolate(\"#ffffcc\", \"#307318\")(num / 5),\n        count: num\n      };\n    }\n\n    ;\n    /* draw states on id #statesvg */\n\n    stateInfo.draw(\"#statesvg\", sampleData, this.tooltipHtml);\n    d3.select(window.frameElement).style(\"height\", \"600px\");\n  }\n\n  render() {\n    this.drawChart();\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"svg\", {\n      width: \"960\",\n      height: \"600\",\n      id: \"statesvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\Docker\\swe\\EmPoweringKnowledge\\cs373-web\\frontend\\empoweringknowledge\\src\\Map.js"],"names":["React","Component","d3","stateInfo","Map","constructor","props","state","energy1","energy2","energy3","population","totalPages","items","page","bill","drawChart","bind","getPopulationPerState","componentDidMount","value","window","location","href","split","path","finish","stateData","i","console","log","fetch","then","res","json","data","setState","tooltipHtml","n","d","low","states","num","sampleData","val","color","interpolate","count","draw","select","frameElement","style","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport stateInfo from './stateInfo';\r\n\r\nclass Map extends Component {\r\n    state = {\r\n            energy1: null,\r\n            energy2: null,\r\n            energy3: null,\r\n            population: null,\r\n            totalPages: 1,\r\n            items:[],\r\n            page: 1,\r\n            bill: 0,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.drawChart = this.drawChart.bind(this);\r\n        this.getPopulationPerState = this.getPopulationPerState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var value = window.location.href.split(\"/\")\r\n        var path = (value[4])\r\n        \r\n    }\r\n\r\n    finish(){\r\n        return;\r\n    }\r\n  \r\n    getPopulationPerState(state){\r\n        var stateData = null;\r\n        var i;\r\n        console.log(('https://api.empoweringknowledge.me/api/states/'+ state));\r\n        fetch('https://api.empoweringknowledge.me/api/states/'+ state)\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            // return this.getMembers(data)\r\n            this.setState({ population: data.population });   \r\n            console.log(data.population)   \r\n           return data.population;\r\n        })\r\n        // var person;\r\n        // var count = 0;\r\n        // console.log(\"data \" + stateData)\r\n        // if(stateData != null){\r\n        //     console.log(stateData.congress_members)\r\n            \r\n        // }\r\n        // return count;\r\n    }\r\n    \r\n    tooltipHtml(n, d){\t/* function to create html content string in tooltip div. */\r\n\t\treturn \"<h4>\"+n+\"</h4><table>\"+\r\n\t\t\t\"<tr><td>Energy Bills</td><td>\"+(d.low)+\"</td></tr>\"+\r\n\t\t\t\"</table>\";\r\n\t}\r\n\r\n    drawChart() {\r\n        var states = {\"AL\": \"Alabama\",\r\n                \"AK\": \"Alaska\",\r\n                \"AZ\": \"Arizona\",\r\n                \"AR\": \"Arkansas\",\r\n                \"CA\": \"California\",\r\n                \"CO\": \"Colorado\",\r\n                \"CT\": \"Connecticut\",\r\n                \"DE\": \"Delaware\",\r\n                \"FL\": \"Florida\",\r\n                \"GA\": \"Georgia\",\r\n                \"HI\": \"Hawaii\",\r\n                \"ID\": \"Idaho\",\r\n                \"IL\": \"Illinois\",\r\n                \"IN\": \"Indiana\",\r\n                \"IA\": \"Iowa\",\r\n                \"KS\": \"Kansas\",\r\n                \"KY\": \"Kentucky\",\r\n                \"LA\": \"Louisiana\",\r\n                \"ME\": \"Maine\",\r\n                \"MD\": \"Maryland\",\r\n                \"MA\": \"Massachusetts\",\r\n                \"MI\": \"Michigan\",\r\n                \"MN\": \"Minnesota\",\r\n                \"MS\": \"Mississippi\",\r\n                \"MO\": \"Missouri\",\r\n                \"MT\": \"Montana\",\r\n                \"NE\": \"Nebraska\",\r\n                \"NV\": \"Nevada\",\r\n                \"NH\": \"New Hampshire\",\r\n                \"NJ\": \"New Jersey\",\r\n                \"NM\": \"New Mexico\",\r\n                \"NY\": \"New York\",\r\n                \"NC\": \"North Carolina\",\r\n                \"ND\": \"North Dakota\",\r\n                \"OH\": \"Ohio\",\r\n                \"OK\": \"Oklahoma\",\r\n                \"OR\": \"Oregon\",\r\n                \"PA\": \"Pennsylvania\",\r\n                \"RI\": \"Rhode Island\",\r\n                \"SC\": \"South Carolina\",\r\n                \"SD\": \"South Dakota\",\r\n                \"TN\": \"Tennessee\",\r\n                \"TX\": \"Texas\",\r\n                \"UT\": \"Utah\",\r\n                \"VT\": \"Vermont\",\r\n                \"VA\": \"Virginia\",\r\n                \"WA\": \"Washington\",\r\n                \"WV\": \"West Virginia\",\r\n                \"WI\": \"Wisconsin\",\r\n                \"WY\": \"Wyoming\"};\r\n        var num;\r\n        var d = \"\";\r\n        var sampleData = {};\r\n        var val = [\"HI\", \"AK\", \"FL\", \"SC\", \"GA\", \"AL\", \"NC\", \"TN\", \"RI\", \"CT\", \"MA\",\r\n            \"ME\", \"NH\", \"VT\", \"NY\", \"NJ\", \"PA\", \"DE\", \"MD\", \"WV\", \"KY\", \"OH\",\r\n            \"MI\", \"WY\", \"MT\", \"ID\", \"WA\", \"TX\", \"CA\", \"AZ\", \"NV\", \"UT\",\r\n            \"CO\", \"NM\", \"OR\", \"ND\", \"SD\", \"NE\", \"IA\", \"MS\", \"IN\", \"IL\", \"MN\",\r\n            \"WI\", \"MO\", \"AR\", \"OK\", \"KS\", \"LA\", \"VA\"]\r\n            \r\n            for(d in val) {\r\n                var num = 0\r\n                num = this.getPopulationPerState(states[val[d]]);   \r\n                console.log(num);         \r\n                sampleData[d] = {\r\n                    // parks: p, orgs: o, events: e,\r\n                    color: d3.interpolate(\"#ffffcc\", \"#307318\")(num/5),\r\n                    count: num,\r\n                };\r\n            };\r\n\r\n        /* draw states on id #statesvg */\r\n        stateInfo.draw(\"#statesvg\", sampleData, this.tooltipHtml);\r\n\r\n        d3.select(window.frameElement).style(\"height\", \"600px\");\r\n    }\r\n\r\n    render() {\r\n        \r\n        this.drawChart();\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"tooltip\"></div>\r\n                <svg width=\"960\" height=\"600\" id=\"statesvg\"></svg>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}