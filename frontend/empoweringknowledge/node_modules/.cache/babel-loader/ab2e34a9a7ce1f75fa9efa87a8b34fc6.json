{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Docker\\\\swe\\\\EmPoweringKnowledge\\\\cs373-web\\\\frontend\\\\empoweringknowledge\\\\src\\\\States.js\";\nimport React, { Component } from \"react\";\nimport { Button, ButtonGroup, Col, Card, CardBody, CardTitle, CardSubtitle, CardDeck, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Form, Input, FormGroup, Row } from 'reactstrap';\nimport { BrowserRouter } from 'react-router-dom';\nimport Highlighter from \"react-highlight-words\";\nimport './Navbar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyPagination from \"./Pagination.js\";\nconst STATESURL = 'https://api.empoweringknowledge.me/api/states';\nconst ORDER = '\"order_by\":[{\"field\":\"name\",\"direction\":\"';\nexport class States extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      pages: 0,\n      nextpage: 2,\n      lastpage: 1,\n      items: [],\n      input: \"\",\n      isLoading: false,\n      sortBy: \"asc\",\n      attributes: {\n        name: \"\",\n        dominant_party: \"\",\n        population: {\n          \"lower\": \"\",\n          \"upper\": \"\"\n        },\n        median_hh_income: {\n          \"lower\": \"\",\n          \"upper\": \"\"\n        },\n        primary_energy_source_1: \"\"\n      },\n      dropdownOpen: {\n        party: false,\n        population: false,\n        median: false,\n        resource: false\n      },\n      dropDownSelections: {\n        party: \"None\",\n        population: \"None\",\n        median: \"None\",\n        resource: \"None\"\n      }\n    };\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleEnter = this.handleEnter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    var url = this.buildUrl();\n    fetch(url).then(res => res.json()).then(data => {\n      this.setState({\n        items: data.objects,\n        items: data.objects,\n        pages: data.total_pages,\n        isLoading: false\n      }, () => {\n        if (this.state.pages <= 1) this.setState({\n          nextpage: 1\n        });\n      });\n    }).catch(console.log);\n  }\n  /*\r\n   * Builds the url that will be used to fetch the data.\r\n   */\n\n\n  buildUrl() {\n    var filter = \"\";\n    var url = \"\";\n    filter = this.buildFilter();\n    filter = this.buildSearch(filter); // If there aren't any filters or terms for searching, use default url\n    // that displays data in ascending order\n\n    if (filter === \"\") {\n      url = STATESURL + '?q={' + ORDER + this.state.sortBy + '\"}]}&page=' + this.state.page;\n    } else {\n      // Else, add the filters and search query\n      url = STATESURL + '?q={\"filters\":[' + filter + '],' + ORDER + this.state.sortBy + '\"}]}&page=' + this.state.page;\n    }\n\n    return url;\n  }\n  /*\r\n   * Loops through all of the of the model's filterable attributes and checks if \r\n   * there is a filter being applied. If there is, it adds that filter query to \r\n   * the filter string. \r\n   */\n\n\n  buildFilter() {\n    var filter = \"\";\n    var keys = Object.keys(this.state.attributes); // Grabs list of attributes\n\n    var currAttribute = \"\";\n    var currAttributeVal = \"\";\n\n    for (var i = 1; i < keys.length; i++) {\n      currAttribute = keys[i];\n      currAttributeVal = this.state.attributes[currAttribute]; // Special cases, checks if the attribute we're looking at is population \n      // or median\n\n      if (currAttribute === \"population\" || currAttribute === \"median_hh_income\") {\n        if (currAttributeVal[\"lower\"] !== \"\") {\n          // If filter is empty, no comma is needed at the beginning\n          if (filter === \"\") {\n            filter += '{\"name\":\"' + currAttribute + '\",\"op\":\"gt\",\"val\":\"' + currAttributeVal[\"lower\"] + '\"}';\n          } else {\n            filter += ',{\"name\":\"' + currAttribute + '\",\"op\":\"ge\",\"val\":\"' + currAttributeVal[\"lower\"] + '\"}';\n          } // Adds the second value to the filter query\n\n\n          if (currAttributeVal[\"upper\"] !== \"\") filter += ',{\"name\":\"' + currAttribute + '\",\"op\":\"le\",\"val\":\"' + currAttributeVal[\"upper\"] + '\"}';\n        }\n      } // Checks the rest of the attributes\n      else if (currAttributeVal !== \"\") {\n          if (filter === \"\") {\n            filter += '{\"name\":\"' + currAttribute + '\",\"op\":\"eq\",\"val\":\"' + currAttributeVal + '\"}';\n          } else {\n            filter += ',{\"name\":\"' + currAttribute + '\",\"op\":\"eq\",\"val\":\"' + currAttributeVal + '\"}';\n          }\n        }\n    }\n\n    return filter;\n  }\n  /*\r\n   * Loops through all of the model's attributes and adds a search query for each\r\n   * term the user inputs. \r\n   */\n\n\n  buildSearch(filter) {\n    var search = \"\";\n    var input = [];\n    var keys = Object.keys(this.state.attributes);\n    var currAttribute = \"\";\n    input = this.state.input.split(\" \"); // List of terms the user inputs\n    // Checks if there's atleast one search term\n\n    if (input[0] != \"\") {\n      // Checks if anything precedes this query\n      // If something does, add a comma\n      if (filter === \"\") {\n        search = '{\"or\":[';\n      } else {\n        search = ',{\"or\":[';\n      } // Loops through each of the attributes\n\n\n      for (var j = 0; j < keys.length; j++) {\n        // Loops through each term the user inputs\n        for (var i = 0; i < input.length; i++) {\n          currAttribute = keys[j]; // Special case, adds comma if this is the first entry in the \n          // search query \n\n          if (currAttribute === \"name\" && i == 0) search += '{\"name\":\"' + currAttribute + '\",\"op\":\"like\",\"val\":\"\\%' + input[i] + '\\%\"}';else search += ',{\"name\":\"' + currAttribute + '\",\"op\":\"like\",\"val\":\"\\%' + input[i] + '\\%\"}';\n        }\n      }\n\n      search += \"]}\";\n      filter += search;\n    }\n\n    return filter;\n  }\n  /*\r\n   * Sets the state input variable to what the user types.\r\n   */\n\n\n  handleTermChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n  /*\r\n   * Calls componentDidMount so the data that is displayed is updated.\r\n   */\n\n\n  handleSearch() {\n    this.componentDidMount();\n  }\n  /*\r\n   * If the user presses 'Enter', calls the handleSearch() method so that the \r\n   * search is made.\r\n   */\n\n\n  handleEnter(e) {\n    if (e.key === 13) {\n      this.handleSearch();\n    }\n  }\n  /*\r\n   * If the user clicks on the 'Submit' buttion, calls the handleSearch() \r\n   * method so that the search is made.\r\n   */\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.handleSearch();\n  }\n  /*\r\n   * Sets the state sort variable to what the user chooses. Either 'asc' \r\n   * or 'desc.' Then calls componentDidMount() so that the new data is loaded. \r\n   */\n\n\n  handleSorting(sort) {\n    this.setState({\n      sortBy: sort\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n  /*\r\n   * Updates the state attributes variable to what the user chooses for the \r\n   * specified filter. Then calls componentDidMount() so that the new data \r\n   * is loaded. \r\n   */\n\n\n  handleFilter(attribute, filter) {\n    var newAttributes = this.state.attributes;\n    newAttributes[attribute] = filter;\n    this.setState({\n      attributes: newAttributes,\n      page: 1,\n      nextpage: 2,\n      lastpage: 1\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n  /*\r\n  * Updates page variables that are used in pagination when the user clicks \r\n  * on a new page number to go to. Then calls componentDidMount() so that the \r\n  * new data is loaded. \r\n  */\n\n\n  handlePageClick(newPage) {\n    if (newPage === 1) {\n      this.setState({\n        lastpage: newPage,\n        page: newPage,\n        nextpage: 2\n      }, () => {\n        this.componentDidMount();\n      });\n    } else if (newPage === this.state.pages) {\n      this.setState({\n        lastpage: newPage - 1,\n        page: newPage,\n        nextpage: newPage\n      }, () => {\n        this.componentDidMount();\n      });\n    } else {\n      this.setState({\n        lastpage: newPage - 1,\n        page: newPage,\n        nextpage: newPage + 1\n      }, () => {\n        this.componentDidMount();\n      });\n    }\n  }\n  /*\r\n   * Resets all the attributes and variables that are used for filtering, \r\n   * searching, and pagination to their default. Then calls componentDidMount() \r\n   * so that the new data is loaded. \r\n   */\n\n\n  handleReset() {\n    this.setState({\n      dropDownSelections: {\n        \"party\": \"None\",\n        \"population\": \"None\",\n        \"median\": \"None\",\n        \"resource\": \"None\"\n      },\n      input: \"\",\n      attributes: {\n        name: \"\",\n        dominant_party: \"\",\n        population: {\n          \"lower\": \"\",\n          \"upper\": \"\"\n        },\n        median_hh_income: {\n          \"lower\": \"\",\n          \"upper\": \"\"\n        },\n        primary_energy_source_1: \"\"\n      },\n      page: 1,\n      nextpage: 2,\n      lastpage: 1\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n  /*\r\n   * Toggles the dropdown option for the specified filterable attribute.\r\n   */\n\n\n  setDropdownOpen(attribute) {\n    var newdropdownOpen = this.state.dropdownOpen;\n    newdropdownOpen[attribute] = !newdropdownOpen[attribute];\n    this.setState({\n      dropdownOpen: newdropdownOpen\n    });\n  }\n  /*\r\n   * Sets the title variable for the dropdown menu of the correct filter. Then\r\n   * checks the attribute that was passed in. Updates variables where needed and \r\n   * calls handleFilter() with the attribute name and value.\r\n   */\n\n\n  setDropDownTitle(attribute, selection) {\n    var newDropDownSelections = this.state.dropDownSelections;\n    newDropDownSelections[attribute] = selection;\n    this.setState({\n      dropDownSelections: newDropDownSelections\n    });\n\n    if (selection === \"None\") {\n      selection = \"\";\n    }\n\n    if (attribute === \"party\") this.handleFilter(\"dominant_party\", selection);else if (attribute === \"population\") {\n      var lowerPop = \"\";\n      var upperPop = \"\";\n\n      switch (selection) {\n        case \"1 - 999,999\":\n          selection = {\n            \"lower\": \"1\",\n            \"upper\": \"999999\"\n          };\n          break;\n\n        case \"1,000,000 - 9,999,999\":\n          selection = {\n            \"lower\": \"1000000\",\n            \"upper\": \"9999999\"\n          };\n          break;\n\n        case \"10,000,000 - 19,999,999\":\n          selection = {\n            \"lower\": \"10000000\",\n            \"upper\": \"19999999\"\n          };\n          break;\n\n        case \"> 20,000,000\":\n          selection = {\n            \"lower\": \"20000000\",\n            \"upper\": \"\"\n          };\n          break;\n\n        default:\n          selection = {\n            \"lower\": \"\",\n            \"upper\": \"\"\n          };\n      }\n\n      this.handleFilter(\"population\", selection);\n    } else if (attribute === \"median\") {\n      switch (selection) {\n        case \"1 - 49,999\":\n          selection = {\n            \"lower\": \"1\",\n            \"upper\": \"49999\"\n          };\n          break;\n\n        case \"50,000 - 59,999\":\n          selection = {\n            \"lower\": \"50000\",\n            \"upper\": \"59999\"\n          };\n          break;\n\n        case \"60,000 - 69,999\":\n          selection = {\n            \"lower\": \"60000\",\n            \"upper\": \"69999\"\n          };\n          break;\n\n        case \"> 70,000\":\n          selection = {\n            \"lower\": \"70000\",\n            \"upper\": \"\"\n          };\n          break;\n\n        default:\n          selection = {\n            \"lower\": \"\",\n            \"upper\": \"\"\n          };\n      }\n\n      this.handleFilter(\"median_hh_income\", selection);\n    } else if (attribute === \"resource\") this.handleFilter(\"primary_energy_source_1\", selection);\n  }\n  /* \r\n   * Renders the button group for filters.\r\n   */\n\n\n  renderFilterButtonGroup(attribute, filterOptions, filterTitles) {\n    return React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen[attribute],\n      toggle: () => this.setDropdownOpen(attribute),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Filter by \", filterTitles[attribute], \": \", this.state.dropDownSelections[attribute]), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, filterOptions[attribute].map(selection => React.createElement(DropdownItem, {\n      onClick: () => this.setDropDownTitle(attribute, selection),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, selection))), ' ');\n  }\n  /*\r\n   * Renders the buttons for filters and sorting.\r\n   */\n\n\n  renderTop() {\n    // Lists of all of the options for filtering for each attribute\n    var filterOptions = {\n      party: [\"None\", \"Democratic\", \"Republican\"],\n      population: [\"None\", \"1 - 999,999\", \"1,000,000 - 9,999,999\", \"10,000,000 - 19,999,999\", \"> 20,000,000\"],\n      median: [\"None\", \"1 - 49,999\", \"50,000 - 59,999\", \"60,000 - 69,999\", \"> 70,000\"],\n      resource: [\"None\", \"Nuclear Power\", \"Natural Gas\", \"Coal\", \"Petroleum\", \"Hydroelectricity\"]\n    }; // Titles for the filter buttons, \"Filter by: _____\"\n\n    var filterTitles = {\n      party: \"Party\",\n      population: \"Population\",\n      median: \"Income\",\n      resource: \"Energy\"\n    }; // Grabs list of filterable attributes\n\n    var attributesList = Object.keys(filterOptions);\n    return React.createElement(\"container\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, // Renders all the filter buttons\n    attributesList.map(attribute => this.renderFilterButtonGroup(attribute, filterOptions, filterTitles)), React.createElement(Button, {\n      onClick: () => this.handleReset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, \"Reset\"), ' ')), React.createElement(Col, {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.handleSorting(\"asc\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Ascending\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: () => this.handleSorting(\"desc\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, \"Descending\"), ' ')), React.createElement(Form, {\n      className: \"searchbox\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      style: {\n        paddingTop: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 'auto',\n        offset: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: this.handleTermChange,\n      onKeyDown: this.handleEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    })))));\n  }\n  /*\r\n   * Renders the body of a card item.\r\n   */\n\n\n  renderAttribute(item, attribute) {\n    // Titles for the attributes in the card body\n    var attributeTitles = {\n      name: \"\",\n      dominant_party: \"Dominate Party: \",\n      population: \"Population: \",\n      median_hh_income: \"Median Income: \",\n      primary_energy_source_1: \"Primary Energy Source: \"\n    }; // Special case, if the attribute is the name, renders the attribute with\n    // a CardTitle\n\n    if (attribute === \"name\") {\n      return React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, attributeTitles[attribute], React.createElement(Highlighter, {\n        highlightClassName: \"HighlightClass\",\n        searchWords: this.state.input.split(\" \"),\n        autoEscape: true,\n        textToHighlight: \"\" + item[attribute],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, attributeTitles[attribute], React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item[attribute],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }));\n  }\n  /*\r\n   * Renders a card item.\r\n   */\n\n\n  renderCard(item) {\n    var attributeList = Object.keys(this.state.attributes); // Makes list of attributes\n\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      top: true,\n      width: \"80%\",\n      style: {\n        width: '300px',\n        height: '375px'\n      },\n      src: \"https://www.state-maps.org/\" + item.congress_members[0][\"state_abr\"].toLowerCase() + \".gif\",\n      alt: \"No image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, attributeList.map(attribute => this.renderAttribute(item, attribute)), React.createElement(Button, {\n      href: \"/state/\" + item.name,\n      class: \"nav-link\",\n      to: \"/state/\" + item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, \" See More\")));\n  }\n  /*\r\n   * Creates the cards for the states. Loops 3 times to create 3 card decks itmems\r\n   * with 3 card items. Returns all 3 card deck items at the end. \r\n   */\n\n\n  renderCards() {\n    const items = this.state.items;\n    var cardDecks = []; // Will hold the card deck items\n\n    var cards = []; // Will hold the card \n    // Need 3 card deck items so loop 3 times\n\n    for (var i = 0; i < 3; i++) {\n      cards = []; // Clears out the old card items to make a new one\n      // Grabs 3 pieces of data at a time, creates card items for each of them\n      // and adds each one to the cards list\n\n      items.slice(i * 3, (i + 1) * 3).map(item => cards.push(this.renderCard(item))); // Adds the 3 newly created cards to the cardDecks list\n\n      cardDecks.push(React.createElement(CardDeck, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, cards));\n    }\n\n    return cardDecks;\n  }\n  /*\r\n   * Renders the entire page.\r\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, this.renderTop()), React.createElement(\"div\", {\n      className: \"States\",\n      style: {\n        paddingTop: \"100px\",\n        width: \"100%\",\n        height: \"60%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, this.renderCards())), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(MyPagination, {\n      pages: this.state.pages,\n      handlePageClick: this.handlePageClick,\n      nextpage: this.state.nextpage,\n      lastpage: this.state.lastpage,\n      page: this.state.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default States;","map":{"version":3,"sources":["C:\\Users\\Docker\\swe\\EmPoweringKnowledge\\cs373-web\\frontend\\empoweringknowledge\\src\\States.js"],"names":["React","Component","Button","ButtonGroup","Col","Card","CardBody","CardTitle","CardSubtitle","CardDeck","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Form","Input","FormGroup","Row","BrowserRouter","Highlighter","MyPagination","STATESURL","ORDER","States","constructor","props","state","page","pages","nextpage","lastpage","items","input","isLoading","sortBy","attributes","name","dominant_party","population","median_hh_income","primary_energy_source_1","dropdownOpen","party","median","resource","dropDownSelections","handleTermChange","bind","handleSearch","handleEnter","handleSubmit","componentDidMount","setState","url","buildUrl","fetch","then","res","json","data","objects","total_pages","catch","console","log","filter","buildFilter","buildSearch","keys","Object","currAttribute","currAttributeVal","i","length","search","split","j","e","target","value","key","preventDefault","handleSorting","sort","handleFilter","attribute","newAttributes","handlePageClick","newPage","handleReset","setDropdownOpen","newdropdownOpen","setDropDownTitle","selection","newDropDownSelections","lowerPop","upperPop","renderFilterButtonGroup","filterOptions","filterTitles","map","renderTop","attributesList","paddingTop","size","offset","renderAttribute","item","attributeTitles","renderCard","attributeList","width","height","congress_members","toLowerCase","renderCards","cardDecks","cards","slice","push","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    Button, ButtonGroup, Col, Card, CardBody, CardTitle, CardSubtitle, \r\n    CardDeck, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Form, Input, \r\n    FormGroup, Row\r\n    } from 'reactstrap';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport Highlighter from \"react-highlight-words\";\r\nimport './Navbar.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport MyPagination from \"./Pagination.js\";\r\n\r\nconst STATESURL = 'https://api.empoweringknowledge.me/api/states';\r\nconst ORDER = '\"order_by\":[{\"field\":\"name\",\"direction\":\"';\r\n\r\nexport class States extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        page: 1,\r\n        pages: 0,\r\n        nextpage: 2,\r\n        lastpage: 1,\r\n        items: [],\r\n        input: \"\",\r\n        isLoading: false,\r\n        sortBy: \"asc\",\r\n        attributes: {\r\n            name: \"\", \r\n            dominant_party: \"\", \r\n            population: {\"lower\": \"\", \"upper\": \"\"}, \r\n            median_hh_income: {\"lower\": \"\", \"upper\": \"\"}, \r\n            primary_energy_source_1: \"\"},\r\n        dropdownOpen: {\r\n            party: false, \r\n            population: false, \r\n            median: false, \r\n            resource: false},\r\n        dropDownSelections: {\r\n            party: \"None\", \r\n            population: \"None\", \r\n            median: \"None\", \r\n            resource: \"None\"},\r\n    };\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleEnter = this.handleEnter.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\n\r\ncomponentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    var url = this.buildUrl();\r\n\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({ items: data.objects, items: data.objects, \r\n                pages:data.total_pages,isLoading: false}, () => {\r\n                if(this.state.pages <= 1)\r\n                    this.setState({nextpage: 1})    \r\n            });      \r\n        })\r\n        .catch(console.log);\r\n}\r\n\r\n/*\r\n * Builds the url that will be used to fetch the data.\r\n */\r\nbuildUrl(){\r\n    var filter = \"\";\r\n    var url = \"\";\r\n    \r\n    filter = this.buildFilter();\r\n    filter = this.buildSearch(filter);\r\n    \r\n    // If there aren't any filters or terms for searching, use default url\r\n    // that displays data in ascending order\r\n    if(filter === \"\"){\r\n        url = STATESURL + '?q={'\r\n        + ORDER \r\n        + this.state.sortBy \r\n        + '\"}]}&page='\r\n        + this.state.page;\r\n    } else{ // Else, add the filters and search query\r\n        url = STATESURL + '?q={\"filters\":['\r\n        + filter\r\n        + '],'\r\n        + ORDER\r\n        + this.state.sortBy \r\n        + '\"}]}&page='\r\n        + this.state.page;\r\n    }\r\n\r\n    return url;\r\n}\r\n\r\n/*\r\n * Loops through all of the of the model's filterable attributes and checks if \r\n * there is a filter being applied. If there is, it adds that filter query to \r\n * the filter string. \r\n */\r\nbuildFilter(){\r\n    var filter = \"\";\r\n    var keys = Object.keys(this.state.attributes); // Grabs list of attributes\r\n    var currAttribute = \"\";\r\n    var currAttributeVal = \"\";\r\n\r\n    for(var i = 1; i < keys.length; i++){\r\n        currAttribute = keys[i];\r\n        currAttributeVal = this.state.attributes[currAttribute];\r\n\r\n        // Special cases, checks if the attribute we're looking at is population \r\n        // or median\r\n        if(currAttribute === \"population\" || \r\n            currAttribute === \"median_hh_income\"){\r\n            if(currAttributeVal[\"lower\"] !== \"\"){\r\n                // If filter is empty, no comma is needed at the beginning\r\n                if(filter === \"\"){ \r\n                    filter += '{\"name\":\"' + currAttribute   \r\n                        + '\",\"op\":\"gt\",\"val\":\"'+ currAttributeVal[\"lower\"] +'\"}'\r\n                } else{\r\n                    filter += ',{\"name\":\"' + currAttribute \r\n                        + '\",\"op\":\"ge\",\"val\":\"'+ currAttributeVal[\"lower\"] +'\"}'\r\n                }\r\n\r\n                // Adds the second value to the filter query\r\n                if(currAttributeVal[\"upper\"] !== \"\")\r\n                    filter += ',{\"name\":\"' + currAttribute \r\n                        + '\",\"op\":\"le\",\"val\":\"'+ currAttributeVal[\"upper\"] +'\"}'\r\n            }\r\n        }\r\n\r\n        // Checks the rest of the attributes\r\n        else if( currAttributeVal !== \"\"){\r\n            if(filter === \"\"){\r\n                filter += '{\"name\":\"' + currAttribute \r\n                    + '\",\"op\":\"eq\",\"val\":\"'+ currAttributeVal +'\"}'\r\n            }else{\r\n                filter += ',{\"name\":\"' + currAttribute \r\n                    + '\",\"op\":\"eq\",\"val\":\"'+ currAttributeVal +'\"}'\r\n            }\r\n        }\r\n    }\r\n\r\n    return filter;\r\n}\r\n\r\n/*\r\n * Loops through all of the model's attributes and adds a search query for each\r\n * term the user inputs. \r\n */\r\nbuildSearch(filter){\r\n    var search = \"\";\r\n    var input = [];\r\n    var keys = Object.keys(this.state.attributes);\r\n    var currAttribute = \"\";\r\n\r\n    input = this.state.input.split(\" \"); // List of terms the user inputs\r\n\r\n    // Checks if there's atleast one search term\r\n    if(input[0] != \"\"){\r\n        // Checks if anything precedes this query\r\n        // If something does, add a comma\r\n        if(filter === \"\"){ \r\n            search = '{\"or\":['\r\n        }\r\n        else{\r\n            search = ',{\"or\":['\r\n        }\r\n\r\n        // Loops through each of the attributes\r\n        for(var j = 0; j < keys.length; j++){\r\n            // Loops through each term the user inputs\r\n            for(var i = 0; i < input.length; i++){\r\n                currAttribute = keys[j]\r\n                // Special case, adds comma if this is the first entry in the \r\n                // search query \r\n                if(currAttribute === \"name\" && i == 0)\r\n                    search += '{\"name\":\"' + currAttribute \r\n                        + '\",\"op\":\"like\",\"val\":\"\\%'+ input[i] +'\\%\"}'\r\n                else\r\n                    search += ',{\"name\":\"' + currAttribute \r\n                        + '\",\"op\":\"like\",\"val\":\"\\%'+ input[i] +'\\%\"}'\r\n            }\r\n        }\r\n\r\n        search += \"]}\";\r\n        filter += search;\r\n    }\r\n\r\n    return filter;\r\n}\r\n\r\n/*\r\n * Sets the state input variable to what the user types.\r\n */\r\nhandleTermChange(e) {\r\n    this.setState({ input: e.target.value });\r\n}\r\n\r\n/*\r\n * Calls componentDidMount so the data that is displayed is updated.\r\n */\r\nhandleSearch() {\r\n    this.componentDidMount();\r\n}\r\n\r\n/*\r\n * If the user presses 'Enter', calls the handleSearch() method so that the \r\n * search is made.\r\n */\r\nhandleEnter(e) {\r\n    if (e.key === 13) {\r\n        this.handleSearch();\r\n    }\r\n}\r\n\r\n/*\r\n * If the user clicks on the 'Submit' buttion, calls the handleSearch() \r\n * method so that the search is made.\r\n */\r\nhandleSubmit(e) {\r\n    e.preventDefault();\r\n    this.handleSearch();\r\n}\r\n\r\n/*\r\n * Sets the state sort variable to what the user chooses. Either 'asc' \r\n * or 'desc.' Then calls componentDidMount() so that the new data is loaded. \r\n */\r\nhandleSorting(sort){\r\n    this.setState({sortBy: sort}, () => {\r\n    this.componentDidMount();\r\n    });\r\n}\r\n\r\n/*\r\n * Updates the state attributes variable to what the user chooses for the \r\n * specified filter. Then calls componentDidMount() so that the new data \r\n * is loaded. \r\n */\r\nhandleFilter(attribute, filter){\r\n    var newAttributes = this.state.attributes;\r\n    newAttributes[attribute] = filter;\r\n\r\n    this.setState({attributes: newAttributes, page: 1, \r\n                   nextpage: 2, lastpage: 1}, () =>{\r\n    this.componentDidMount();\r\n    });\r\n}\r\n\r\n/*\r\n* Updates page variables that are used in pagination when the user clicks \r\n* on a new page number to go to. Then calls componentDidMount() so that the \r\n* new data is loaded. \r\n*/\r\nhandlePageClick(newPage){\r\n    if(newPage === 1){\r\n        this.setState({lastpage: newPage, page: newPage, nextpage: 2}, () => {\r\n            this.componentDidMount();\r\n        });\r\n    }\r\n    else if(newPage === this.state.pages){\r\n        this.setState({lastpage: newPage - 1, page: newPage, nextpage: newPage}, () => {\r\n            this.componentDidMount();\r\n        });\r\n    }\r\n    else{\r\n        this.setState({lastpage: newPage - 1, page: newPage, nextpage: newPage + 1}, () => {\r\n            this.componentDidMount();\r\n        });\r\n    }\r\n}\r\n\r\n/*\r\n * Resets all the attributes and variables that are used for filtering, \r\n * searching, and pagination to their default. Then calls componentDidMount() \r\n * so that the new data is loaded. \r\n */\r\nhandleReset(){\r\n    this.setState({\r\n            dropDownSelections: {\r\n                \"party\":\"None\", \r\n                \"population\": \"None\", \r\n                \"median\":\"None\", \r\n                \"resource\":\"None\"}, \r\n            input: \"\", \r\n            attributes: {\r\n                name: \"\", \r\n                dominant_party: \"\", \r\n                population: {\"lower\": \"\", \"upper\": \"\"}, \r\n                median_hh_income: {\"lower\": \"\", \"upper\": \"\"}, \r\n                primary_energy_source_1: \"\"},\r\n            page: 1, \r\n            nextpage: 2, \r\n            lastpage: 1}, () =>{\r\n    this.componentDidMount();\r\n    });\r\n}\r\n\r\n/*\r\n * Toggles the dropdown option for the specified filterable attribute.\r\n */\r\nsetDropdownOpen(attribute){\r\n    var newdropdownOpen = this.state.dropdownOpen;\r\n    newdropdownOpen[attribute] = !newdropdownOpen[attribute];\r\n\r\n    this.setState({dropdownOpen: newdropdownOpen});\r\n}\r\n\r\n/*\r\n * Sets the title variable for the dropdown menu of the correct filter. Then\r\n * checks the attribute that was passed in. Updates variables where needed and \r\n * calls handleFilter() with the attribute name and value.\r\n */\r\nsetDropDownTitle(attribute, selection){\r\n    var newDropDownSelections = this.state.dropDownSelections;\r\n    newDropDownSelections[attribute] = selection;\r\n\r\n    this.setState({dropDownSelections: newDropDownSelections});\r\n\r\n    if(selection === \"None\"){\r\n        selection = \"\";\r\n    }\r\n\r\n    if(attribute === \"party\")\r\n        this.handleFilter(\"dominant_party\", selection)\r\n\r\n    else if(attribute === \"population\"){\r\n        var lowerPop = \"\"\r\n        var upperPop = \"\"\r\n        switch(selection){\r\n            case \"1 - 999,999\":\r\n                selection = {\"lower\": \"1\", \"upper\": \"999999\"}\r\n                break;\r\n            case \"1,000,000 - 9,999,999\":\r\n                selection = {\"lower\": \"1000000\", \"upper\": \"9999999\"}\r\n                break;\r\n            case \"10,000,000 - 19,999,999\":\r\n                selection = {\"lower\": \"10000000\", \"upper\": \"19999999\"}\r\n                break;\r\n            case \"> 20,000,000\":\r\n                selection = {\"lower\": \"20000000\", \"upper\": \"\"}\r\n                break;\r\n            default:\r\n                selection = {\"lower\": \"\", \"upper\": \"\"}\r\n        }\r\n        this.handleFilter(\"population\",selection);\r\n    }\r\n\r\n    else if(attribute === \"median\"){\r\n        switch(selection){\r\n            case \"1 - 49,999\":\r\n                selection = {\"lower\": \"1\", \"upper\": \"49999\"}\r\n                break;\r\n            case \"50,000 - 59,999\":\r\n                selection = {\"lower\": \"50000\", \"upper\": \"59999\"}\r\n                break;\r\n            case \"60,000 - 69,999\":\r\n                selection = {\"lower\": \"60000\", \"upper\": \"69999\"}\r\n                break;\r\n            case \"> 70,000\":\r\n                selection = {\"lower\": \"70000\", \"upper\": \"\"}\r\n                break;\r\n            default:\r\n                selection = {\"lower\": \"\", \"upper\": \"\"}\r\n        }\r\n        this.handleFilter(\"median_hh_income\",selection);\r\n    }\r\n\r\n    else if(attribute === \"resource\")\r\n        this.handleFilter(\"primary_energy_source_1\",selection);\r\n}\r\n\r\n/* \r\n * Renders the button group for filters.\r\n */\r\nrenderFilterButtonGroup(attribute, filterOptions, filterTitles){ \r\n    return (\r\n    <Dropdown isOpen={this.state.dropdownOpen[attribute]} toggle={() => this.setDropdownOpen(attribute)}>\r\n        <DropdownToggle caret>\r\n            Filter by {filterTitles[attribute]}: {this.state.dropDownSelections[attribute]}\r\n        </DropdownToggle>\r\n        <DropdownMenu>{\r\n                filterOptions[attribute].map((selection) =>\r\n                    <DropdownItem onClick={() => this.setDropDownTitle(attribute, selection)}>{selection}</DropdownItem>\r\n                )\r\n            }\r\n        </DropdownMenu>{' '}\r\n    </Dropdown>\r\n    )\r\n}\r\n\r\n/*\r\n * Renders the buttons for filters and sorting.\r\n */\r\nrenderTop(){\r\n    // Lists of all of the options for filtering for each attribute\r\n    var filterOptions = {\r\n        party: [\r\n            \"None\", \"Democratic\", \"Republican\"],\r\n        population: [\r\n            \"None\", \"1 - 999,999\", \"1,000,000 - 9,999,999\", \r\n            \"10,000,000 - 19,999,999\", \"> 20,000,000\"],\r\n        median: [\r\n            \"None\", \"1 - 49,999\", \"50,000 - 59,999\", \r\n            \"60,000 - 69,999\", \"> 70,000\"],\r\n        resource:  [\r\n            \"None\", \"Nuclear Power\", \"Natural Gas\", \"Coal\", \"Petroleum\", \r\n            \"Hydroelectricity\"]\r\n    }\r\n\r\n    // Titles for the filter buttons, \"Filter by: _____\"\r\n    var filterTitles = {\r\n        party: \"Party\",\r\n        population: \"Population\",\r\n        median: \"Income\",\r\n        resource: \"Energy\"\r\n    }\r\n\r\n    // Grabs list of filterable attributes\r\n    var attributesList = Object.keys(filterOptions);\r\n\r\n    return(\r\n        <container>\r\n            <Row>\r\n                <Col className=\"text-left\">\r\n                    <ButtonGroup>{\r\n                            // Renders all the filter buttons\r\n                            attributesList.map((attribute) => \r\n                                this.renderFilterButtonGroup(attribute, filterOptions, filterTitles))         \r\n                        }\r\n                        <Button onClick={() => this.handleReset()}>Reset</Button>{' '}\r\n                    </ButtonGroup>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button color=\"primary\" onClick={() => this.handleSorting(\"asc\")}>Ascending</Button>{' '}\r\n                    <Button color=\"secondary\"onClick={() => this.handleSorting(\"desc\")}>Descending</Button>{' '}\r\n                </Col>\r\n            </Row>\r\n            <Form className=\"searchbox\" onSubmit={this.handleSubmit}>\r\n                <FormGroup row style={{paddingTop: \"25px\"}}>\r\n                    <Col sm={{ size: 'auto', offset: 5 }}>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            onChange={this.handleTermChange}\r\n                            onKeyDown={this.handleEnter}\r\n                        />\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n\r\n        </container>\r\n    );\r\n}\r\n\r\n/*\r\n * Renders the body of a card item.\r\n */\r\n renderAttribute(item, attribute){\r\n    // Titles for the attributes in the card body\r\n    var attributeTitles = {\r\n        name: \"\",\r\n        dominant_party: \"Dominate Party: \",\r\n        population: \"Population: \",\r\n        median_hh_income: \"Median Income: \",\r\n        primary_energy_source_1: \"Primary Energy Source: \"\r\n    }\r\n\r\n    // Special case, if the attribute is the name, renders the attribute with\r\n    // a CardTitle\r\n    if(attribute === \"name\"){\r\n       return(\r\n        <CardTitle>{attributeTitles[attribute]}<Highlighter\r\n            highlightClassName=\"HighlightClass\"\r\n            searchWords={this.state.input.split(\" \")}\r\n            autoEscape={true}\r\n            textToHighlight={\"\" + item[attribute]}/>\r\n        </CardTitle>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <CardSubtitle>{attributeTitles[attribute]}<Highlighter\r\n            highlightClassName=\"HighlightClass\"\r\n            searchWords={this.state.input.split(\" \")}\r\n            autoEscape={true}\r\n            textToHighlight={\"\" + item[attribute]}/>\r\n        </CardSubtitle>\r\n    )\r\n    \r\n\r\n }\r\n\r\n/*\r\n * Renders a card item.\r\n */\r\nrenderCard(item){\r\n    var attributeList = Object.keys(this.state.attributes); // Makes list of attributes\r\n\r\n    return(\r\n        <Card>\r\n            <img \r\n                top width=\"80%\" \r\n                style={{width: '300px', height: '375px'}}  \r\n                src={\"https://www.state-maps.org/\" \r\n                    + item.congress_members[0][\"state_abr\"].toLowerCase() \r\n                    + \".gif\" } alt={\"No image\"} />\r\n            <CardBody>{\r\n                attributeList.map((attribute) => this.renderAttribute(item, attribute))\r\n            }\r\n            <Button href= {\"/state/\" + item.name} class=\"nav-link\"  to={\"/state/\" + item.name}> See More</Button>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\n/*\r\n * Creates the cards for the states. Loops 3 times to create 3 card decks itmems\r\n * with 3 card items. Returns all 3 card deck items at the end. \r\n */\r\nrenderCards(){\r\n    const items = this.state.items;\r\n    var cardDecks = []; // Will hold the card deck items\r\n    var cards = []; // Will hold the card \r\n   \r\n    // Need 3 card deck items so loop 3 times\r\n    for(var i = 0; i < 3; i++){\r\n        cards = []; // Clears out the old card items to make a new one\r\n        // Grabs 3 pieces of data at a time, creates card items for each of them\r\n        // and adds each one to the cards list\r\n        items.slice(i * 3,(i + 1) * 3).map(item => cards.push(this.renderCard(item))\r\n        )\r\n        // Adds the 3 newly created cards to the cardDecks list\r\n        cardDecks.push(<CardDeck>{cards}</CardDeck>);\r\n    }\r\n    return cardDecks;\r\n}\r\n\r\n/*\r\n * Renders the entire page.\r\n */\r\nrender() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {this.renderTop()}\r\n            </div>\r\n            <div className=\"States\" style={{\r\n                    paddingTop: \"100px\",\r\n                    width:\"100%\", \r\n                    height:\"60%\"}}>\r\n                <div>\r\n                    <Col sm={{ size: 'auto'}}>\r\n                        {this.renderCards()}\r\n                    </Col>\r\n                </div>\r\n                <div>\r\n                    <MyPagination \r\n                        pages = {this.state.pages} \r\n                        handlePageClick = {this.handlePageClick}\r\n                        nextpage = {this.state.nextpage} \r\n                        lastpage = {this.state.lastpage}\r\n                        page = {this.state.page}/> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n}\r\n\r\nexport default States;"]},"metadata":{},"sourceType":"module"}